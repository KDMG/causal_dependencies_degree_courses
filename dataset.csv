course|program
linear algebra and geometry|the space of the mxn matrices: sum and product by scalars. the transpose. square, symmetric, skew-symmetric matrices. product of matrices. invertible matrices. the determinant and its properties. binet's theorem. the inverse of an invertible matrix. rank and independence of columns (rows). linear systems. cramer's theorem. rouch√©-capelli theorem. linear systems with parameters. ladder reduction. vector spaces and vector subspaces. generators of a vector space. linear independence of vectors. bases, coordinates, and dimension. vector subspaces of rn: bases, dimension, equations. grassmann formula. affine subspaces. linear maps. matrices associated with a linear map. kernel, image, and their dimensions. isomorphisms. scalar product. cauchy-schwarz inequality. projections. fourier coefficient. orthogonal and orthonormal bases. gram-schmidt process. change of orthonormal bases. orthogonal matrices. endomorphism and change of bases: similar matrices. diagonalizable endomorphisms and diagonalizable matrices. eigenvectors and eigenvalues. characteristic polynomial. algebraic and geometric multiplicity. criteria for diagonalizability. symmetric endomorphisms. spectral theorem. orthogonal endomorphisms. plane and space geometry.
mathematical analysis 1|sets, relations and functions. natural, integer, rational and real numbers. complex numbers, trigonometric and exponential representation. de moivre formula. the induction principle. modulus and powers. exponential, logaritmic and angular functions. limit of real sequences and its properties. indeterminate forms. monotone sequences. the neper's number and related limits. asymptotic comparison. limits of real function of real variale. properties. indeterminate forms. asymptotic comparison. monotone functions. continuity; the weierstrass's and the intermediate values theorems. derivative and derivative formulas. successive derivative. the fermat's, rolle's, lagrange's and cauchy's theorems. derivative and monotonicity. convexity. primitives. the de l'hospital's theorems. taylor formulas. asymptots and the study of the graphs of functions. riemann integral and integrability. definite integral and its properties. fundamental theorem and formula of the integral calculus. indefinite integral and integration methods: sum decomposition, by parts and sostitution. improper integral and convergence tests. series. the geometric and harmonic series. convergence tests. absolute convergence. leibnitz theorem. introduction to taylor and fourier series
mathematical analysis 2|functions of several variables. curves, line integrals, vector fields, differential forms. multiple integrals with applications. ordinary differential equations. laplace transform on r.
electromagnetics for information transmission|recall on basic concepts of electrostatics, magnetostatics, electrodynamics and maxwell equations. maxwell's equations in differential form and in phasors' domain. the information transmission: free space propagation and guided propagation. the transmission lines, impedance matching techniques. principles of radiation and antennas. electromagnetic compatibility elements. basic numerical techniques for the simulation of electromagnetic phenomena.
general physics 1|the galilean method. error analysis. scalar and vector quantities. particle mechanics. systems mechanics. kinematics. rectilinear, circular, harmonic motion. relative motions. dynamics. constraints, elastic, weight and friction forces. tension. inertial and not inertial frames; real and fictitious forces. energy and momentum. centre of mass. work, energy. conservative and not-conservative forces. potential energy; collisions. kinematics and dynamics in rotational mechanics. moment of a vector, of a force, of the momentum. moment of inertia. cardinal equations in the mechanics of systems. equivalent sets of forces. equilibrium of a rigid body .. fluids. general characteristics of fluids. fundamental equation of hydrostatics and hydrodynamics. thermology and thermodynamics: temperature, thermal equilibrium. first principle of the thermodynamics. states and transformations. the ideal gas
general physics 2|electric and magnetic phenomena in vacuum and matter, stationary case and non-stationary case. geometric optics and basic principles of wave optics.
object-oriented programming|the course consists of two main sections: object-oriented programming, and data structures and algorithms. the detailed program is given below: object-oriented programming (oop): - uml for the oop paradigm: class, object, package and sequence diagrams - oop: concepts of class, object, message, fields, methods and parameters - introduction to java (language syntax, constructs, compilation and execution from command-line, using an ide) - stack and heap of a java program, references, aliasing - arrays and strings - writing in standard output, reading from standard input - access modifiers, visibility rules, rules for the passage of properties and methods - inheritance, object assignments, dynamic type identification, casting - polymorphism, dynamics linking of methods - overload and override, the object class and base methods - abstract classes, interfaces - generics, collections, wrappers - i/o management - exceptions and errors, try-catch and try-finally constructs, debugging - tool for software management and development data structures and algorithms: - temporal and spatial complexity analysis, asymptotic functions, possible cases - advanced data structures: trees, heaps, graphs - advanced sorting methods: heapsort, mergesort, quicksort the workshops will cover the whole program, except for the purely theoretical aspects.
numerical analysis|error analysis and convergence. solutions of equations in one variable. direct methods for the solution of linear systems. interpolation and polynomial approximation. divided differences. numerical solution of nonlinear systems. iterative methods for linear algebra. eigenvalue problems. numerical differentiation and integration. initial and boundary value problems.
computer architecture and cloud computing|the course is divided into two parts. the first is intended to give students a basic understanding of the architecture of computers. the second aims to provide a basic understanding of computer networks. topics  computers part:  1) computer architectures 2) logic operations in alu 3) registers and cache 4) bus and arbitration 5) instructions and microinstructions 6) processors (pipeline, superscalar,.) 7) central memory 8) storage memory 9) interrupts and i/o devices  computer networks part:  10) introduction to computer networks 11) communication protocols 12) the iso / osi stack levels 13) cloud computing: infrastructures, virtualizations, automation, orchestration, programming paradigms, other aspects
industrial automation|part a: introduction to industrial automation. concepts of production systems and production processes. automation production systems and their classification. production equipment. process and manufacturing productions automation. flexibility of the manufacturing systems: general elements. principal performance indexes. dcs systems part b: modeling and control of discrete events systems (des). discrete events systems (des) concepts review; their use in modeling production processes. importance of des for engineers and relevant features of control of such systems. basics on automata and petri nets as des modeling formalisms. fundamental properties, elementary operations and compositions of automata. fundamental properties of the petri nets. place and transition-invariant. modeling of typical elements of the manufacturing systems. examples of production systems models . analysis of cyclic production systems. supervisory control of des using petri nets. uncontrollability and unobservability concepts. extention of the supervisory control methods to the uncontrollable or unobservable case. ladder and sfc languages for plc programing and their application for the development of control logics to be applied on a scaled manufacturing plant.
databases|theory: - introduction to enterprise information systems: definitions of organization, information and computer systems. enterprise processes. characteristics of processes, information and data. - introduction to databases and database management systems: basic definitions, database schemes and instances, abstraction levels, abstraction and independence. languages for database management, database users. - relational model: definition of relation, relations and tables, null values, integrity constraints. - relational algebra and calculus. - sql. - database design. conceptual design and the entity/relationship model. logical design. - theory of normalization. - outline of semi-structured and aggregated data models. exercises: - modelling with relational and er models - queries in relational algebra, relational calculus and sql - normalization laboratorio - database creation and querying with m  yl - database design - written exam simulation with perception
probability and statistics|1. probability spaces. 2. discrete random variables. 3. continuous random variables. 4. convergence and approximation: law of large numbers and central limit theory. 5. mathematical statistics: estimates, sampling, regression, hypothesis tests.
automatic control|fundamentals on analysis and design of automatic control systems for linear plants. characteristics and performance of feedback control systems. frequency response and root locus design techniques for siso feedback systems. pid industrial compensators. digital control systems.
business economics|course contents are organized in three parts: -the enterprise: economic and financial aspect of management, enterprise in the economic system, corporate legal forms, economic and financial aspects of the company's management, the financial statements, the analysis of the financial statements - investment decisions: risk and uncertainty, capital opportunity costs, methodologies and techniques for investment decisions -dynamics of the market and competitive strategies: basic concepts of microeconomics, cost theory, market and competition, competitive strategies, information and networking
fundamentals of electronics|contents (lectures, 72 hours) - number systems and codes. - binary functions: and, or, not, nand, nor, xor, xnor; full-adder. - boolean algebra. - combinatorial networks: logic circuits, algebraic representation, sum of products, product of sums, minterms, maxterms, canonical sum and product, synthesis of combinatorial circuits. programmable logic array (pla); karnaugh maps. the quine-m cluskey algorithm. nand, nor implementations. - integrated circuits, logic families. design of combinatorial circuits: analysis and synthesis. code converters. coders and decoders. multiplexers and demultiplexers. implementation of combinatorial circuits by using decoders and multiplexers. half-adder and full-adder, carry lookahead adder. multipliers. - sequential networks. sr, s'r' and d latch. flip-flops: sr, jk, d, t. state machines, moore and mealy models. analysis and design of sequential circuits. registers and shift-registers. counters. - analog and digital signal representation. linear and non-linear devices. non-linear circuit analysis. ideal amplifiers, voltage and current gain, input and output impedance, frequency response. - the operational amplifier. the ideal op-amp. circuits with op-amps. - fundamentals of solid-state electronics. the p-n junction. - the diode: dc characteristic, shockley model, piecewise linear models. circuits with diodes. diode logic. - the mos transistor (mosfet): n- and p-channel mosfet, behavior, model, i-v characteristics. - the bipolar junction transistor (bjt): behavior, model, i-v characteristics. - single transistor amplifiers with bjt and with mosfet: biasing circuits, basic configurations. - analysis of electronic circuits with diodes, mosfets, and bjts: linearization, dc and ac behavior. - inverter: characteristics and noise margin. dc analysis, power consumption, transient analysis, rise and fall time, propagation delay. the nmos inverter with resistive load and with active load. the cmos inverter. - nmos, pseudo-nmos and cmos random logic. pla.
electrotechnics|the course is divided in two parts. the first part is devoted to the study of the fundamental elements, linear, time-invariant and memoryless and to the study of basic methods to analyze electrical circuits. the second part is devoted to the modeling of physical phenomena and engineering processes by means of non-linear dynamical circuits and to their solution by a computer. part i: elementary bipoles, 2-port elements and linear, time-invariant, memoryless circuits. bipoles and generating functions (resistors, inductors, capacitor, indipenendent sources), 2-port nets (transformers, gyrator, nullor, z and y nets, driven sources). circuit analysis based on mesh currents and on node potentials. thevenin's and norton's theorems. part ii: modeling of complex phenomena and processes by non-linear dynamical circuits and numerical solution techniques. cases-study of non-linear, dynamical models and of their differential-type resolving systems (free and constrained) and numerical methods for their solution (euler and euler-riemann methods). elements of algorithmic programming in matlab and examples of calculation of the dynamic response of non-linear dynamical systems.
fundamentals of automatics|the course aims to provide the theory fundamentals of the dynamic systems and some interesting problems about the automatic control theory. in detail, analysis methods of linear time-invariant systems will be studied, in continuous-time and discrete-time, stability analysis and state- feedback and output-feedback techniques are addressed together with some methodologies to solve simple control problems. the various topics covered are as follows: - introduction to dynamical systems; - linear time invariant systems; - systems, models and their classification; - inpunt-output models; - state variable models; - non-linear systems linearization; - modelling of real physical systems; - continuous-time and discrete-time systems; - time domain analysis of input-output models; - time domain analysis of state variable models; - time-domain responses of continuous and discrete time model; - transient and permanent regime of linear systems; - modal analysis; - laplace and zeta transforms; - s-domain analysis; - z-domain analysis; - internal and external stability of linear systems; - lyapunov stabilty: definitions and functions of lyapunov stability; - structural properties: reachability, observability, controllability, detectability; - state-feedback, output-feedback techniques and observers; - eigenvalue assignment; - introduction to controller design.
fundamentals of computer science|1. introduction to the course and basic concepts of computer science. 2. electronic computers and operating systems: general concepts and high-level architecture. 3. representation and coding of information: characters, numbers, images and sounds. 4. programming environment: compilers, editors, ides, debugging 5. programming elements: expressions, variables, instructions, data types, control structures, functions, recursion 6. notes on computational complexity and its application in search and sorting methods (selection sort, bubble sort, insertion sort) 7. input / output and file management 8. pointers, single linked lists, stacks and queues 9. outline of more complex data structures (trees and graphs)
software engineering|theory  unified modeling language (uml) (2 ects) unified process (up) (2 ects) patterns (1 ects) project lifecycle and agile methodologies (1 ects) software as a product (0.5 ects) software as a process (0.5 ects) advanced software engineering (1 ect)   exercises: python (1 ects), enterprise architect
automation laboratory|this course deals with the design of embedded control systems. a specific micro controller is examined in detail as an example of embedded controller. in this analysis the resources incorporated and integrated with this micro controller are showed. analog to digital conversion, pwm outputs, timers, serial communications and wireless comunications are presented as functional blocks for real time controllers. exercises (classroom and laboratory 54 hours) for all the items are provided both classroom and laboratory activities. guided exercises about programming of embedded devices have been planned during the classroom activities. students are invited to develop a project on a topic of the course. all projects have a hardware realization, the electronics of the i/o interface will be analysed. students will learn how to analyse data-sheets of interface devices with the micro controller in order to allocate processor resources and to define driver electronics. the course also addresses design, control, programming of automatic systems as well as navigation problems of auonomous systems; it provide the background knowledge for the design of small automatic systems and atonomous robotic systems and provide the necessary tools to operate autonomously in indoor or outdoor environments applying state-of-the-art on navigation and control algorithms based on embedded technology. during the course, the basics of embedded microcontroller are firstly treated, along with their application to control. than, different of the more important types of technologies used for sensing and to control autonomous systems is introduced. finally, the field of application and programming of an embedded microcontroller will be investigated, basically equipping an autonomous system designed and maded in our laboratory. these topics provide the link to real applications and to the state of the art in embedded robotics and autonomous systems.
analytical mechanics|vector calculus. kinematics of the point mass: kinematic variables, plane motion and other types of motion. kinematics of the systems of particles, rigid motion and relative motion. fundamental principles of dynamics. motion under gravity and oscillatory motion. statics and dynamics of the unconstrained point particle. statics and dynamics of systems of particles with constrains. material geometry and dynamical variables of the systems of particles. huygens‚Äô theorem. general theorems of the mechanics of the systems of particles. balance equations. analytical mechanics and lagrangian mechanics. some elements of ljapunov's equilibrium and stability theory and analysis of motion in phase space.
methods and techniques for automation|- preliminaries of system theory -structure and components of a samped-data control system. -s-z mapping -stability analysis. -transient and steady-state output response. -design methods based on a discrete-time equivalent of an analog controller. -design methods based on diophantine equations. -eigenvalue assignment with state feedback and dynamic output feedback. internal model principle. trajectory tracking - elements of fuzzy theory with application to pid design
mathematical methods for automation engineering|the classes consist of the following topics: -theory of functions of one complex variable; -theory of functional spaces; -fourier series and transform; - partial differential equations (laplace, waves, heath, schr√∂dinger); -linear functionals and operators.
modeling and identification of dynamic processes|theoretical lessons.  introduction and generalities about model construction and systems identification from experimental data. models and parametric identification. data collection and related problems. best model and identification techniques (ls, ml, recursive methods). model validation. systems in state-space form. structural properties and relations between state-space representations and external i/o representations. realization of transfer function in state space form. generalities on neural networks. an outline of identification by neural networks. implementation of identification methods by  laboratory experiences.  using matlab system identification toolbox. laboratory with the use of microcontroller boards. data collection problems. determination of the best model in the class. identification techniques (least squares, maximum likelihood, recursive techniques). model validation techniques.
computer aided control design|theory -references to linear,time invariant, siso systems. -analysis of mimo linear systems -mimo modal synthesis: the tracking problem of external signals and the disturbance rejection - using lmis in control theory -stability of polytopic uncertain systems -elements of robust control for polytopic uncertain systems exercitations -basic elements of matlab. use of matlab (control toolbox) for the analysis of siso and mimo systems. use of matlab (control toolbox) and of yalmip for the mimo modal synthesis: the tracking problem of external signals and the disturbance rejection use of matlab (control toolbox) and of yalmip for the stability analysis of polytopic uncertain systems use of matlab (control toolbox) and of yalmip for the robust control of polytopic uncertain systems
mobile programming|>>theory lessons  preliminary concepts (1.5 ects)  native, web and hybrid apps  the kotlin programming language  native programming on android (5.5 ects) introduction, android studio, application fundamentals, activities and layouts, handling events, working with multiple activities, ui elements, running in the background, debugging, data persistence, app distribution  cross-platform programming on flutter (2 ects) introduction to the framework, configuring the ide, creation of the first app, app life-cycle, user interface, layout management, management of files, management of images, management of a database  >>exercises and labs  exercises and labs on kotlin, android and flutter
operations research|organized systems and decision-making problems. linear and integer linear programming models. ampl: an algebraic modeling language. basic topics in convex analysis and linear algebra. theory of linear programming. simplex algorithm and revised simplex algorithm. duality theory: motivations and main results. dual simplex algorithm. sensitivity analysis and economic interpretation. introduction to the integer linear programming. the method of cutting planes. gomory cuts and cover inequalities for knapsack 0-1 problem. applications.
operating systems|theory unit 1 ‚Äì introduction to computer systems. unit 2 ‚Äì concurrent programming in java. unit 3 ‚Äì cpu scheduling (mono- and multi-processor systems). unit 4 ‚Äì memory (mono- and multi-processor systems). unit 5 ‚Äì input-output. unit 6 ‚Äì case study: linux. exercises unit 2 ‚Äì concurrent programming in java. unit 3 ‚Äì cpu scheduling (mono- and multi-processor systems). unit 4 ‚Äì memory (mono- and multi-processor systems). unit 5 ‚Äì input-output. unit 6 - linux.
robotics and automation technologies|theoretical lectures: introduction to the process control. control system architectures. measurements in control systems. measuring devices. electric drives. static and dynamic analysis of dc motors, stepper motors, brushless motors and ac motors. power semiconductors devices. electric power converters. elements: programmable logic controllers (plc) and local area networks for automation computer-based exercises: feedback control design for electric drives with dc motors using matlab e simulink.
telecommunication technologies|introduction to communication technologies: wired and wireless solutions. fundamental quantities in telecommunications. telecommunication signals. concepts of probability transmission channels end media. quality of telecommunications systems: noise and distortion.    x and optical fiber technologies sensor networks signal generation and their study in time/frequency domain noise and distorsion effects  l_info only radiomobile technologies. computer network: wired and wireless solutions. domotic systems.
web technologies|(1) introduction world wide web (w3) definition. founding principles. w3 protocols. main applications. (2) the client/server architecture definition, principles and relevant aspects. hints to the client/server architectures. c/s and internet: communication network characteristics, application layer protocols. c/s and w3: w3 main components. w3 servers: description and functionalities, http protocol, mime type, server/browser interaction. browsers: description and functionalities. (3) the html language main characteristics. tags: structure and attributes. fundamental html tags. hyperlinks: types and related html tags. lists. multimedia contents in html pages. image maps. tables. form. hints of css. html document rendering. (4) the javascript language main characteristics and functionalities. javascript (js) code structure, js integration into html documents and execution. variables and data types. functions and objects. control structures. browser's events handling in js. document object model and its manipulation in js. (5) the php language main characteristics and functionalities. php code structure and use for html contents generation. variables and data types. functions and objects. control structures. use of php for html form content manipulation. access to dbms in php. examples of php-mysql interface. user sessions handling in php. (6) the laravel frameworks for server-side development web application characteristics and its implementation through the mvc design pattern. mvc application stack. characteristics of the laravel framework: main components, application workflow. error handling. the basic structure of a laravel application. eloquent orm. layouts and html form handling. packages integration in laravel. user authentication and authorization. examples of applications development. (7) the jquery library main characteristics. statements structure. css positional and generic selectors. core methods: manipulation of wrapped-set, html classes, attributes, styles and contents. html form handling and animations. event handling. ajax interactions and hints on json encoding.
algebra and logics|set theory. arithmetic: division, prime numbers, gcd, bezout's identity, euclid's algorithm. equivalence relations, quotients, integers modulo n. order relations and lattices. groups, subgroups, group homomorphisms, quotient group. lagrange theorem. rings and fields, integral domains, ideals, quotient ring. polynomial rings. introduction to mathematical logic. propositional logic: syntax, semantics, natural deduction system. soundness and completeness theorems. first-order logic: syntax and semantics.
